{"ast":null,"code":"const API_URL = \"https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json\";\n\n// Sample data as fallback if API fails\nconst SAMPLE_DOCTORS = [{\n  id: 1,\n  name: \"Dr. John Smith\",\n  speciality: [\"Cardiology\", \"Internal Medicine\"],\n  experience: 15,\n  fee: 1500,\n  image: \"https://randomuser.me/api/portraits/men/1.jpg\",\n  isVideoConsultAvailable: true,\n  isInClinicAvailable: true\n}, {\n  id: 2,\n  name: \"Dr. Sarah Johnson\",\n  speciality: [\"Dermatology\"],\n  experience: 8,\n  fee: 1200,\n  image: \"https://randomuser.me/api/portraits/women/1.jpg\",\n  isVideoConsultAvailable: true,\n  isInClinicAvailable: false\n}, {\n  id: 3,\n  name: \"Dr. Michael Williams\",\n  speciality: [\"Neurology\"],\n  experience: 12,\n  fee: 1800,\n  image: \"https://randomuser.me/api/portraits/men/2.jpg\",\n  isVideoConsultAvailable: false,\n  isInClinicAvailable: true\n}];\nexport const fetchDoctors = async () => {\n  try {\n    // Add this line to help distinguish CORS errors\n    console.log(\"Attempting fetch from:\", API_URL, \"Origin:\", window.location.origin);\n    const response = await fetch(API_URL);\n    // Rest of your code...\n  } catch (error) {\n    // Special handling for CORS errors\n    if (error.message.includes('CORS') || error.message.includes('blocked') || error.message.includes('cross-origin')) {\n      console.error(\"DETECTED CORS ERROR:\", error);\n      console.log(\"This is likely a CORS issue. API server needs to allow requests from:\", window.location.origin);\n    } else {\n      console.error(\"Other fetch error:\", error);\n    }\n    return SAMPLE_DOCTORS;\n  }\n};","map":{"version":3,"names":["API_URL","SAMPLE_DOCTORS","id","name","speciality","experience","fee","image","isVideoConsultAvailable","isInClinicAvailable","fetchDoctors","console","log","window","location","origin","response","fetch","error","message","includes"],"sources":["/home/garv/Documents/bajaj/doctor-listing-app/src/services/api.js"],"sourcesContent":["const API_URL = \"https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json\";\n\n// Sample data as fallback if API fails\nconst SAMPLE_DOCTORS = [\n  {\n    id: 1,\n    name: \"Dr. John Smith\",\n    speciality: [\"Cardiology\", \"Internal Medicine\"],\n    experience: 15,\n    fee: 1500,\n    image: \"https://randomuser.me/api/portraits/men/1.jpg\",\n    isVideoConsultAvailable: true,\n    isInClinicAvailable: true\n  },\n  {\n    id: 2,\n    name: \"Dr. Sarah Johnson\", \n    speciality: [\"Dermatology\"],\n    experience: 8,\n    fee: 1200,\n    image: \"https://randomuser.me/api/portraits/women/1.jpg\",\n    isVideoConsultAvailable: true,\n    isInClinicAvailable: false\n  },\n  {\n    id: 3,\n    name: \"Dr. Michael Williams\",\n    speciality: [\"Neurology\"],\n    experience: 12,\n    fee: 1800,\n    image: \"https://randomuser.me/api/portraits/men/2.jpg\",\n    isVideoConsultAvailable: false,\n    isInClinicAvailable: true\n  }\n];\n\nexport const fetchDoctors = async () => {\n  try {\n    // Add this line to help distinguish CORS errors\n    console.log(\"Attempting fetch from:\", API_URL, \"Origin:\", window.location.origin);\n    \n    const response = await fetch(API_URL);\n    // Rest of your code...\n  } catch (error) {\n    // Special handling for CORS errors\n    if (error.message.includes('CORS') || \n        error.message.includes('blocked') ||\n        error.message.includes('cross-origin')) {\n      console.error(\"DETECTED CORS ERROR:\", error);\n      console.log(\"This is likely a CORS issue. API server needs to allow requests from:\", window.location.origin);\n    } else {\n      console.error(\"Other fetch error:\", error);\n    }\n    \n    return SAMPLE_DOCTORS;\n  }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,8DAA8D;;AAE9E;AACA,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC;EAC/CC,UAAU,EAAE,EAAE;EACdC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,+CAA+C;EACtDC,uBAAuB,EAAE,IAAI;EAC7BC,mBAAmB,EAAE;AACvB,CAAC,EACD;EACEP,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE,CAAC,aAAa,CAAC;EAC3BC,UAAU,EAAE,CAAC;EACbC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,iDAAiD;EACxDC,uBAAuB,EAAE,IAAI;EAC7BC,mBAAmB,EAAE;AACvB,CAAC,EACD;EACEP,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE,CAAC,WAAW,CAAC;EACzBC,UAAU,EAAE,EAAE;EACdC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,+CAA+C;EACtDC,uBAAuB,EAAE,KAAK;EAC9BC,mBAAmB,EAAE;AACvB,CAAC,CACF;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEZ,OAAO,EAAE,SAAS,EAAEa,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAEjF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACjB,OAAO,CAAC;IACrC;EACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,IAC9BF,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,IACjCF,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;MAC1CT,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,OAAO,CAACC,GAAG,CAAC,uEAAuE,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC9G,CAAC,MAAM;MACLJ,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;IAEA,OAAOjB,cAAc;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}